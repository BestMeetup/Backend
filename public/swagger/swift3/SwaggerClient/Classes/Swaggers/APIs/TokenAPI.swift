//
// TokenAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class TokenAPI: APIBase {
    /**
     Register Token of User
     
     - parameter instanceId: (query) description (optional)
     - parameter token: (query) description (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func tokenRegisterGet(instanceId: String? = nil, token: String? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        tokenRegisterGetWithRequestBuilder(instanceId: instanceId, token: token).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Register Token of User
     - GET /token/register
     - Register Token of User
     - API Key:
       - type: apiKey client 
       - name: api_client
     - API Key:
       - type: apiKey uid 
       - name: api_uid
     - API Key:
       - type: apiKey access-token 
       - name: api_key
     
     - parameter instanceId: (query) description (optional)
     - parameter token: (query) description (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func tokenRegisterGetWithRequestBuilder(instanceId: String? = nil, token: String? = nil) -> RequestBuilder<Void> {
        let path = "/token/register"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "instance_id": instanceId,
            "token": token
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Unregister Token of User
     
     - parameter instanceId: (query) description (optional)
     - parameter token: (query) description (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func tokenUnregisterGet(instanceId: String? = nil, token: String? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        tokenUnregisterGetWithRequestBuilder(instanceId: instanceId, token: token).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Unregister Token of User
     - GET /token/unregister
     - Unregister Token of User
     - API Key:
       - type: apiKey client 
       - name: api_client
     - API Key:
       - type: apiKey uid 
       - name: api_uid
     - API Key:
       - type: apiKey access-token 
       - name: api_key
     
     - parameter instanceId: (query) description (optional)
     - parameter token: (query) description (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func tokenUnregisterGetWithRequestBuilder(instanceId: String? = nil, token: String? = nil) -> RequestBuilder<Void> {
        let path = "/token/unregister"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "instance_id": instanceId,
            "token": token
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
