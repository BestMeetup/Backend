/**
 * Swagger BestMeetup
 * This is a Swagger BestMeetup server.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeviseResponseUser'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DeviseResponseUser'));
  } else {
    // Browser globals (root is window)
    if (!root.SwaggerBestMeetup) {
      root.SwaggerBestMeetup = {};
    }
    root.SwaggerBestMeetup.UsuarioApi = factory(root.SwaggerBestMeetup.ApiClient, root.SwaggerBestMeetup.DeviseResponseUser);
  }
}(this, function(ApiClient, DeviseResponseUser) {
  'use strict';

  /**
   * Usuario service.
   * @module api/UsuarioApi
   * @version 1.0.0
   */

  /**
   * Constructs a new UsuarioApi. 
   * @alias module:api/UsuarioApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the authSignInPost operation.
     * @callback module:api/UsuarioApi~authSignInPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviseResponseUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Login
     * login
     * @param {String} email E-mail de login
     * @param {String} password Senha
     * @param {module:api/UsuarioApi~authSignInPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviseResponseUser}
     */
    this.authSignInPost = function(email, password, callback) {
      var postBody = null;

      // verify the required parameter 'email' is set
      if (email == undefined || email == null) {
        throw new Error("Missing the required parameter 'email' when calling authSignInPost");
      }

      // verify the required parameter 'password' is set
      if (password == undefined || password == null) {
        throw new Error("Missing the required parameter 'password' when calling authSignInPost");
      }


      var pathParams = {
      };
      var queryParams = {
        'email': email,
        'password': password
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DeviseResponseUser;

      return this.apiClient.callApi(
        '/auth/sign_in', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the authValidateTokenGet operation.
     * @callback module:api/UsuarioApi~authValidateTokenGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeviseResponseUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate Token
     * Validate Token
     * @param {module:api/UsuarioApi~authValidateTokenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeviseResponseUser}
     */
    this.authValidateTokenGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_client', 'api_uid', 'api_key'];
      var contentTypes = [];
      var accepts = [];
      var returnType = DeviseResponseUser;

      return this.apiClient.callApi(
        '/auth/validate_token', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
