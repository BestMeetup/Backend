---
swagger: "2.0"
info:
  description: "This is a Swagger BestMeetup server."
  version: "1.0.0"
  title: "Swagger BestMeetup"
host: "api.bestmeetup.com.br"
basePath: "/v1"
schemes:
- "http"
- "https"
paths:
  /auth:
    post:
      tags:
      - "Usuario"
      summary: "Register User"
      description: "Register User"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "OK"
  /auth/sign_in:
    post:
      tags:
      - "Usuario"
      summary: "Login"
      description: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "query"
        description: "E-mail de login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "Senha"
        required: true
        type: "string"
      responses:
        200:
          description: "Sucesso"
          schema:
            $ref: "#/definitions/DeviseResponseUser"
          headers:
            access-token:
              type: "string"
              description: "AccessToken using to other requests"
            client:
              type: "string"
              description: "Client using to other requests"
            uid:
              type: "string"
              description: "Uid using to other requests"
        401:
          description: "Invalid username/password supplied"
  /auth/validate_token:
    get:
      tags:
      - "Usuario"
      summary: "Validate Token"
      description: "Validate Token"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviseResponseUser"
      security:
      - api_key: []
      - api_client: []
      - api_uid: []
  /token/register:
    get:
      tags:
      - "Token"
      summary: "Register Token of User"
      description: "Register Token of User"
      parameters:
      - name: "instance_id"
        in: "query"
        description: "description"
        required: false
        type: "string"
      - name: "token"
        in: "query"
        description: "description"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - api_key: []
      - api_client: []
      - api_uid: []
  /token/unregister:
    get:
      tags:
      - "Token"
      summary: "Unregister Token of User"
      description: "Unregister Token of User"
      parameters:
      - name: "instance_id"
        in: "query"
        description: "description"
        required: false
        type: "string"
      - name: "token"
        in: "query"
        description: "description"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - api_key: []
      - api_client: []
      - api_uid: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "access-token"
    in: "header"
  api_client:
    type: "apiKey"
    name: "client"
    in: "header"
  api_uid:
    type: "apiKey"
    name: "uid"
    in: "header"
definitions:
  DeviseResponseError:
    properties:
      errors:
        type: "array"
        items:
          type: "string"
          example: "Invalid login credentials. Please try again."
  DeviseResponseUser:
    type: "object"
    properties:
      status:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/User"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "Lorem Name"
      email:
        type: "string"
        example: "email@exemple.com.br"
      nickname:
        type: "string"
        example: "Lorem"
      password:
        type: "string"
        example: "123456"
      password_confirmation:
        type: "string"
        example: "123456"
